---
 demo/demo.c         |    1 +
 src/libdumbtts.c    |   14 +++++++-------
 src/libdumbtts_re.c |    1 -
 3 files changed, 8 insertions(+), 8 deletions(-)

--- a/demo/demo.c
+++ b/demo/demo.c
@@ -2,6 +2,7 @@
 #include <stdlib.h>
 #include <libdumbtts.h>
 
+int
 main(int argc,char *argv[])
 {
 	struct dumbtts_conf *conf;
--- a/src/libdumbtts.c
+++ b/src/libdumbtts.c
@@ -616,31 +616,31 @@ static unsigned short letter_lower[0x100
 4064,4065,4066,4067,4068,4069,4070,4071,4072,4073,4074,4075,4076,4077,4078,4079,
 4080,4081,4082,4083,4084,4085,4086,4087,4088,4089,4090,4091,4092,4093,4094,4095};
 
-static int isfalnum(wc)
+static int isfalnum(int wc)
 {
 	if (wc < 0x1000) return letter_flags[wc] & (U_DIGIT | U_LETTER);
 	return 0;
 }
 
-static int isfdigit(wc)
+static int isfdigit(int wc)
 {
 	if (wc < 0x1000) return letter_flags[wc] & U_DIGIT;
 	return 0;
 }
 
-static int isfalpha(wc)
+static int isfalpha(int wc)
 {
 	if (wc < 0x1000) return letter_flags[wc] & U_LETTER;
 	return 0;
 }
 
-static int isfupper(wc)
+static int isfupper(int wc)
 {
 	if (wc < 0x1000) return letter_flags[wc] & U_UPPER;
 	return 0;
 }
 
-static int isflower(wc)
+static int isflower(int wc)
 {
 	if (wc < 0x1000) {
 		if (letter_flags[wc] & U_UPPER) return 0;
@@ -648,7 +648,7 @@ static int isflower(wc)
 	}
 	return 0;
 }
-static int isfspace(wc)
+static int isfspace(int wc)
 {
 	if (wc < 0x1000) {
 		if (!letter_flags[wc]) return U_SPACE;
@@ -657,7 +657,7 @@ static int isfspace(wc)
 	return 0;
 }
 
-static int toflower(wc)
+static int toflower(int wc)
 {
 	if (wc<0x1000) {
 		int i=letter_lower[wc];
--- a/src/libdumbtts_re.c
+++ b/src/libdumbtts_re.c
@@ -862,7 +862,6 @@ static int do_units(struct dumbtts_conf
 {
 	char *c,*d,*eos;int ival,i,forma,typ;
 	struct dumbtts_unit *u;
-	wchar_t ws;
 	if (wc>0x7f || !isdigit(wc) || !conf->units) return 0;
 	ival=wc-'0';
 	c=*str;
